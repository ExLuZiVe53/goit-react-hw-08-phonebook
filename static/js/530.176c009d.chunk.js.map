{"version":3,"file":"static/js/530.176c009d.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","Pages/Contacts.jsx"],"sourcesContent":["export const getContacts = state => state.contacts;\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","//redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as operation from 'redux/contacts/operation';\nimport { getContacts } from 'redux/contacts/selectors.js';\n\nimport { useEffect } from 'react';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(operation.fetchContacts());\n  }, [dispatch]);\n\n  const filters = useSelector(state => state.filters) || '';\n  const { items } = useSelector(getContacts);\n\n  const getVisibleContacts = (contacts, filters) => {\n    switch (filters) {\n      case filters:\n        return contacts.filter(contact =>\n          contact.name.toLowerCase().includes(filters)\n        );\n      default:\n        return contacts;\n    }\n  };\n\n  const visibleFilter = getVisibleContacts(items, filters);\n\n  const handleDelete = (id, name) => {\n    dispatch(operation.removeContact({ id, name }));\n  };\n\n  return (\n    <ul>\n      {visibleFilter.map(contact => (\n        <li key={contact.id}>\n          {contact.name}: {contact.number}{' '}\n          <button onClick={() => handleDelete(contact.id, contact.name)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as operation from 'redux/contacts/operation';\n\nimport { Formik, ErrorMessage, Form, Field } from 'formik';\nimport * as yup from 'yup';\n\nimport { getContacts } from 'redux/contacts/selectors.js';\nimport toast from 'react-hot-toast';\n\nconst initialValues = { name: '', number: '' };\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const { items } = useSelector(getContacts);\n\n  const handleSabmit = (values, { resetForm }) => {\n    const haveNameInPhonebook = items.some(\n      contact => contact.name.toLowerCase() === values.name.toLowerCase()\n    );\n\n    if (haveNameInPhonebook) {\n      return toast.error(`${values.name} is already in contacts`)({\n        duration: 1000,\n        position: 'top-center',\n      });\n    }\n\n    dispatch(\n      operation.addContact({\n        name: values.name.trim(),\n        number: values.number.trim(),\n      })\n    );\n\n    resetForm();\n  };\n\n  const schema = yup.object().shape({\n    name: yup.string().required().min(4),\n    number: yup.number().required().min(4),\n  });\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSabmit}\n    >\n      <Form>\n        <label htmlFor=\"name\">Name</label>\n        <Field name=\"name\" type=\"name\" />\n        <ErrorMessage name=\"name\" component=\"div\" />\n\n        <label htmlFor=\"number\">Number</label>\n        <Field name=\"number\" type=\"tel\" />\n        <ErrorMessage name=\"number\" component=\"div\" />\n\n        <button type=\"submit\">add contacts</button>\n      </Form>\n    </Formik>\n  );\n};\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { filter } from 'redux/contacts/filtersSlise.js';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  //стейт для фільтра\n  const [filterok, setFilter] = useState('');\n  // контрольований інпут\n  const handleFind = e => {\n    setFilter(e.target.value);\n\n    dispatch(filter(e.target.value));\n  };\n\n  return (\n    <div>\n      <label htmlFor=\"\">\n        Find contacts by name\n        <input\n          name=\"filter\"\n          type=\"text\"\n          value={filterok}\n          onChange={handleFind}\n        />\n      </label>\n    </div>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { Filter } from 'components/Filter/Filter.jsx';\nimport { Loader } from 'components/Loader/Loader';\n\nexport default function Contacts() {\n  const isLoading = useSelector(selectIsLoading);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your tasks</title>\n      </Helmet>\n      <ContactForm />\n      {isLoading && <Loader />}\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["getContacts","state","contacts","selectIsLoading","isLoading","ContactList","dispatch","useDispatch","useEffect","operation","filters","useSelector","visibleFilter","filter","contact","name","toLowerCase","includes","getVisibleContacts","items","_jsx","children","map","_jsxs","number","onClick","id","initialValues","ContactForm","schema","yup","shape","required","min","Formik","validationSchema","onSubmit","values","_ref","resetForm","some","toast","concat","duration","position","trim","Form","htmlFor","Field","type","ErrorMessage","component","Filter","_useState","useState","_useState2","_slicedToArray","filterok","setFilter","value","onChange","e","target","Contacts","_Fragment","Helmet","Loader"],"sourceRoot":""}
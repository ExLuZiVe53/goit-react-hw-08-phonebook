{"version":3,"file":"static/js/405.0a7e1403.chunk.js","mappings":"oPAMMA,EAAgB,CAAEC,MAAO,GAAIC,SAAU,IAEvCC,EAASC,EAAAA,KAAaC,MAAM,CAChCJ,MAAOG,EAAAA,KAAaE,WAAWC,IAAI,GACnCL,SAAUE,EAAAA,KAAaE,WAAWC,IAAI,KAE3BC,EAAQ,WACnB,IAAMC,GAAWC,EAAAA,EAAAA,MAmBjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLZ,cAAeA,EACfa,iBAAkBV,EAClBW,SArBiB,SAACC,EAAMC,GAAqB,IAAjBC,EAASD,EAATC,UAC9BC,QAAQC,IAAI,YAAaJ,GAMzBN,EACEW,EAAAA,GAAoB,CAClBnB,MAAOc,EAAOd,MAAMoB,OACpBnB,SAAUa,EAAOb,SAASmB,UAI9BJ,GACF,EAM2BK,UAEvBC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAAAF,SAAA,EACHX,EAAAA,EAAAA,KAAA,MAAAW,SAAI,WAEJX,EAAAA,EAAAA,KAAA,SAAOc,QAAQ,QAAOH,SAAC,YACvBX,EAAAA,EAAAA,KAACe,EAAAA,GAAK,CAACC,KAAK,WACZhB,EAAAA,EAAAA,KAACiB,EAAAA,GAAY,CAACD,KAAK,QAAQE,UAAU,SAErClB,EAAAA,EAAAA,KAAA,SAAOc,QAAQ,WAAUH,SAAC,cAC1BX,EAAAA,EAAAA,KAACe,EAAAA,GAAK,CAACC,KAAK,cACZhB,EAAAA,EAAAA,KAACiB,EAAAA,GAAY,CAACD,KAAK,WAAWE,UAAU,SAExClB,EAAAA,EAAAA,KAAA,UAAQmB,KAAK,SAAQR,SAAC,cAI9B,EChDe,SAASS,IAEtB,OACER,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEX,EAAAA,EAAAA,KAACqB,EAAAA,EAAM,CAAAV,UACLX,EAAAA,EAAAA,KAAA,SAAAW,SAAO,aAETX,EAAAA,EAAAA,KAACH,EAAK,MAGZ,C","sources":["components/LogIn/LogIn.jsx","Pages/LogIn.jsx"],"sourcesContent":["import { Formik, ErrorMessage, Form, Field } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport * as yup from 'yup';\n\nimport * as authOperation from 'redux/auth/auth-operation';\n\nconst initialValues = { email: '', password: '' };\n\nconst schema = yup.object().shape({\n  email: yup.string().required().min(4),\n  password: yup.string().required().min(4),\n});\nexport const LogIn = () => {\n  const dispatch = useDispatch();\n\n  const handleSabmit = (values, { resetForm }) => {\n    console.log('valuesLOG', values);\n    // const log = JSON.stringify({\n    //   name: values.name.trim(),\n    //   email: values.email.trim(),\n    // });\n    // console.log('loglog', log);\n    dispatch(\n      authOperation.logIn({\n        email: values.email.trim(),\n        password: values.password.trim(),\n      })\n    );\n\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSabmit}\n    >\n      <Form>\n        <h3>LogIn</h3>\n\n        <label htmlFor=\"email\">E-mail</label>\n        <Field name=\"email\" />\n        <ErrorMessage name=\"email\" component=\"div\" />\n\n        <label htmlFor=\"password\">password</label>\n        <Field name=\"password\" />\n        <ErrorMessage name=\"password\" component=\"div\" />\n\n        <button type=\"submit\">Enter</button>\n      </Form>\n    </Formik>\n  );\n};\n","// import { Helmet } from 'react-helmet';\nimport { Helmet } from 'react-helmet';\nimport { LogIn } from '../components/LogIn/LogIn.jsx';\n\n\nexport default function Login() {\n  \n  return (\n    <div>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LogIn />\n    </div>\n  );\n}\n"],"names":["initialValues","email","password","schema","yup","shape","required","min","LogIn","dispatch","useDispatch","_jsx","Formik","validationSchema","onSubmit","values","_ref","resetForm","console","log","authOperation","trim","children","_jsxs","Form","htmlFor","Field","name","ErrorMessage","component","type","Login","Helmet"],"sourceRoot":""}
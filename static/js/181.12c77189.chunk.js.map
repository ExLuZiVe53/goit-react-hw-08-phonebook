{"version":3,"file":"static/js/181.12c77189.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","Pages/Contacts.jsx"],"sourcesContent":["export const getContacts = state => state.contacts;\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","// extracted by mini-css-extract-plugin\nexport default {\"delete\":\"ContactList_delete__dvPUy\",\"ListStyle\":\"ContactList_ListStyle__RZu2u\",\"ContactUl\":\"ContactList_ContactUl__I-fzQ\",\"ContactItem\":\"ContactList_ContactItem__XiC+M\",\"ContactName\":\"ContactList_ContactName__vEA6D\",\"ContactNumber\":\"ContactList_ContactNumber__Cxv8N\"};","//redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as operation from 'redux/contacts/operation';\nimport { getContacts } from 'redux/contacts/selectors.js';\n\nimport { useEffect } from 'react';\n\nimport css from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(operation.fetchContacts());\n  }, [dispatch]);\n\n  const filters = useSelector(state => state.filters) || '';\n  const { items } = useSelector(getContacts);\n\n  const getVisibleContacts = (contacts, filters) => {\n    switch (filters) {\n      case filters:\n        return contacts.filter(contact =>\n          contact.name.toLowerCase().includes(filters)\n        );\n      default:\n        return contacts;\n    }\n  };\n\n  const visibleFilter = getVisibleContacts(items, filters);\n\n  const handleDelete = (id, name) => {\n    dispatch(operation.removeContact({ id, name }));\n  };\n\n  return (\n    <ul className={css.ContactUl}>\n      {visibleFilter.map(contact => (\n        <li className={css.ContactItem} key={contact.id}>\n          <span className={css.ContactName}>{contact.name}:</span>\n          <span className={css.ContactNumber}>{contact.number}</span>{' '}\n          <button\n            className={css.delete}\n            onClick={() => handleDelete(contact.id, contact.name)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"FormWrapper\":\"ContactForm_FormWrapper__Fx9VQ\",\"FormLabel\":\"ContactForm_FormLabel__SwfwS\",\"FormInput\":\"ContactForm_FormInput__s9Pni\",\"ButtonForm\":\"ContactForm_ButtonForm__X1lS5\"};","import React from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as operation from 'redux/contacts/operation';\n\nimport { Formik, ErrorMessage, Form, Field } from 'formik';\nimport * as yup from 'yup';\n\nimport { getContacts } from 'redux/contacts/selectors.js';\nimport toast from 'react-hot-toast';\n\nimport css from './ContactForm.module.css';\n\nconst initialValues = { name: '', number: '' };\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const { items } = useSelector(getContacts);\n\n  const handleSabmit = (values, { resetForm }) => {\n    const haveNameInPhonebook = items.some(\n      contact => contact.name.toLowerCase() === values.name.toLowerCase()\n    );\n\n    if (haveNameInPhonebook) {\n      return toast.error(`${values.name} is already in contacts`)({\n        duration: 1000,\n        position: 'top-center',\n      });\n    }\n\n    dispatch(\n      operation.addContact({\n        name: values.name.trim(),\n        number: values.number.trim(),\n      })\n    );\n\n    resetForm();\n  };\n\n  const schema = yup.object().shape({\n    name: yup.string().required().min(4),\n    number: yup.number().required().min(4),\n  });\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSabmit}\n    >\n      <Form className={css.FormWrapper}>\n        <label className={css.FormLabel} htmlFor=\"name\">\n          Name\n        </label>\n        <Field className={css.FormInput} name=\"name\" type=\"name\" />\n        <ErrorMessage name=\"name\" component=\"div\" />\n\n        <label className={css.FormLabel} htmlFor=\"number\">\n          Number\n        </label>\n        <Field className={css.FormInput} name=\"number\" type=\"tel\" />\n        <ErrorMessage name=\"number\" component=\"div\" />\n\n        <button className={css.ButtonForm} type=\"submit\">\n          add contacts\n        </button>\n      </Form>\n    </Formik>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"FilterInput\":\"Filter_FilterInput__-+rOd\",\"FilterWrap\":\"Filter_FilterWrap__Xh2KK\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { filter } from 'redux/contacts/filtersSlise.js';\n\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  //стейт для фільтра\n  const [filterok, setFilter] = useState('');\n  // контрольований інпут\n  const handleFind = e => {\n    setFilter(e.target.value);\n\n    dispatch(filter(e.target.value));\n  };\n\n  return (\n    <div className={css.FilterWrap}>\n      <label htmlFor=\"\">Find contacts by name</label>\n      <input\n        className={css.FilterInput}\n        name=\"filter\"\n        type=\"text\"\n        value={filterok}\n        onChange={handleFind}\n      />\n    </div>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { Filter } from 'components/Filter/Filter.jsx';\nimport { Loader } from 'components/Loader/Loader';\n\nexport default function Contacts() {\n  const isLoading = useSelector(selectIsLoading);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your tasks</title>\n      </Helmet>\n      <ContactForm />\n      {isLoading && <Loader />}\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["getContacts","state","contacts","selectIsLoading","isLoading","ContactList","dispatch","useDispatch","useEffect","operation","filters","useSelector","visibleFilter","filter","contact","name","toLowerCase","includes","getVisibleContacts","items","_jsx","className","css","children","map","_jsxs","number","onClick","id","initialValues","ContactForm","schema","yup","shape","required","min","Formik","validationSchema","onSubmit","values","_ref","resetForm","some","toast","concat","duration","position","trim","Form","htmlFor","Field","type","ErrorMessage","component","Filter","_useState","useState","_useState2","_slicedToArray","filterok","setFilter","value","onChange","e","target","Contacts","_Fragment","Helmet","Loader"],"sourceRoot":""}